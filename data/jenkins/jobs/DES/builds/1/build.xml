<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1540.v295eccc9778f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.33-484.v2fcd689980d1">
      <queuingDurationMillis>7</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>1</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2265.v140e610fe9d5">
      <stagesUUID>0490b3ab-e31a-4ef6-9ea7-5f4c65ce2953</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2265.v140e610fe9d5">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Checkout</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>container</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="string">maven</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>git</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>url</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">git@github.com:samuel-cavalcanti/quarkus-quickstart.git</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>branch</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">main</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>credentialsId</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">DEPLOY_KEY</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Test and build</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>container</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="string">maven</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">maven -B -ntp verify</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build docker Image</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>container</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="string">docker</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                            <name>script</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">sh &quot;&quot;&quot;
                        docker build -t ${env.IMAGE_NAME}:${env.TAG} .
                        docker tag ${env.IMAGE_NAME}:${env.TAG} ${env.IMAGE_NAME}:latest
                        &quot;&quot;&quot;
                        
                        withCredentials(usernamePassword(
                            credentialsId: &apos;DOCKERHUB&apos;,
                            usernameVariable: &apos;REGISTRY_USER&apos;,
                            passwordVariable: &apos;REGISTRY_PASSWORD&apos;
                        )) {
                            sh &quot;&quot;&quot;
                            docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
                            docker tag ${env.IMAGE_NAME}:${env.TAG} ${env.REGISTRY_USER}/${env.IMAGE_NAME}:${env.TAG}
                            docker push ${env.REGISTRY_USER}/${env.IMAGE_NAME}:${env.TAG}
                            &quot;&quot;&quot;
                        }</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>0490b3ab-e31a-4ef6-9ea7-5f4c65ce2953</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>IMAGE_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">quickstart</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>TAG</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                  <value class="string">&quot;${env.BUILD_ID}&quot;</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <variables class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTClosureMap">
              <variables class="linked-hash-map">
                <entry>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                    <key>yaml</key>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                    <value class="string">
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: maven
      image: maven:3.9.11-eclipse-temurin-21
      command:
        - sleep
      args:
        - infinity
      securityContext:
        # ubuntu runs as root by default, it is recommended or even mandatory in some environments (such as pod security admission &quot;restricted&quot;) to run as a non-root user.
        runAsUser: 0
    - name: docker
      image: docker:28.3-dind
      command:
        - dockerd
      args:
        - --host=tcp://0.0.0.0:2375
      env:
        - name: DOCKER_HOST
          value: tcp://0.0.0.0:2375
      securityContext:
        # ubuntu runs as root by default, it is recommended or even mandatory in some environments (such as pod security admission &quot;restricted&quot;) to run as a non-root user.
        privileged: true
</value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                </entry>
                <entry>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                    <key>retries</key>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                    <value class="int">2</value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                </entry>
              </variables>
            </variables>
            <agentType>
              <key>kubernetes</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4183.v94b_6fd39da_c1">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1419.v2337d1ceceef">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@5.7.0">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/main</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@6.3.2">
              <sha1>6449a20b7be5da43f215ce749cb412170d06a1ae</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/main</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>git@github.com:samuel-cavalcanti/quarkus-quickstart.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.33-484.v2fcd689980d1">
      <queuingDurationMillis>8576</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>8563</buildableDurationMillis>
      <waitingDurationMillis>2</waitingDurationMillis>
      <executingDurationMillis>18508</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.33-484.v2fcd689980d1">
      <queuingDurationMillis>21015</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>21011</buildableDurationMillis>
      <waitingDurationMillis>2</waitingDurationMillis>
      <executingDurationMillis>11200</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.model.InterruptedBuildAction>
      <causes>
        <org.jenkinsci.plugins.workflow.support.steps.ExecutorStepExecution_-RemovedNodeCause plugin="workflow-durable-task-step@1452.v0ee719c104a_7"/>
      </causes>
    </jenkins.model.InterruptedBuildAction>
  </actions>
  <queueId>64</queueId>
  <timestamp>1756053740754</timestamp>
  <startTime>1756053740767</startTime>
  <result>ABORTED</result>
  <duration>61522</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>ABORTED</result>
    <script>// Uses Declarative syntax to run commands inside a container.
pipeline {
    agent {
        kubernetes {
            // Rather than inline YAML, in a multibranch Pipeline you could use: yamlFile &apos;jenkins-pod.yaml&apos;
            // Or, to avoid YAML:
            // containerTemplate {
            //     name &apos;shell&apos;
            //     image &apos;ubuntu&apos;
            //     command &apos;sleep&apos;
            //     args &apos;infinity&apos;
            // }
            yaml &apos;&apos;&apos;
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: maven
      image: maven:3.9.11-eclipse-temurin-21
      command:
        - sleep
      args:
        - infinity
      securityContext:
        # ubuntu runs as root by default, it is recommended or even mandatory in some environments (such as pod security admission &quot;restricted&quot;) to run as a non-root user.
        runAsUser: 0
    - name: docker
      image: docker:28.3-dind
      command:
        - dockerd
      args:
        - --host=tcp://0.0.0.0:2375
      env:
        - name: DOCKER_HOST
          value: tcp://0.0.0.0:2375
      securityContext:
        # ubuntu runs as root by default, it is recommended or even mandatory in some environments (such as pod security admission &quot;restricted&quot;) to run as a non-root user.
        privileged: true
&apos;&apos;&apos;
            // Can also wrap individual steps:
            // container(&apos;shell&apos;) {
            //     sh &apos;hostname&apos;
            // }
            retries 2
        }
    }
     environment {
        IMAGE_NAME = &apos;quickstart&apos;
        TAG = &quot;${env.BUILD_ID}&quot;
    }
    
    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                container(&apos;maven&apos;) {
                   git (
                        url:&apos;git@github.com:samuel-cavalcanti/quarkus-quickstart.git&apos;,
                        branch: &apos;main&apos;,
                        credentialsId: &apos;DEPLOY_KEY&apos;,
                        )
                }
            }
        }
        stage(&apos;Test and build&apos;){
            steps {
                container(&apos;maven&apos;) {
                   sh &apos;maven -B -ntp verify&apos;
                }
            }
        }
        
        stage(&apos;Build docker Image&apos;){
            
            steps {
                   container(&apos;docker&apos;) {
                    script {
                        sh &quot;&quot;&quot;
                        docker build -t ${env.IMAGE_NAME}:${env.TAG} .
                        docker tag ${env.IMAGE_NAME}:${env.TAG} ${env.IMAGE_NAME}:latest
                        &quot;&quot;&quot;
                        
                        withCredentials(usernamePassword(
                            credentialsId: &apos;DOCKERHUB&apos;,
                            usernameVariable: &apos;REGISTRY_USER&apos;,
                            passwordVariable: &apos;REGISTRY_PASSWORD&apos;
                        )) {
                            sh &quot;&quot;&quot;
                            docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
                            docker tag ${env.IMAGE_NAME}:${env.TAG} ${env.REGISTRY_USER}/${env.IMAGE_NAME}:${env.TAG}
                            docker push ${env.REGISTRY_USER}/${env.IMAGE_NAME}:${env.TAG}
                            &quot;&quot;&quot;
                        }
                    }
                }
                
            }
        }
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1092279103</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>2381540742</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>5512687590</long>
      </entry>
      <entry>
        <string>run</string>
        <long>4696265755</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>577619315</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>1128375038</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set">
      <string>org.jenkinsci.plugins.pipeline.StageStatus.TAG_NAME</string>
    </internalCalls>
    <sandbox>true</sandbox>
    <iota>67</iota>
    <head>1:67</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>